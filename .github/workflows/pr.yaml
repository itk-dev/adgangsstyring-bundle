on: pull_request
name: PR Review
jobs:
  test-composer-files:
    name: Validate composer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: ctype, dom, iconv, json, zip, gd, soap
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Validate composer files
        run: |
          composer validate composer.json

  php-check-coding-standards:
    name: PHP - Check Coding Standards
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: ctype, dom, iconv, json, zip, gd, soap
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress
      - name: PHPCS
        run: |
          composer check-coding-standards
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======

>>>>>>> 2333520 (Added unit tests to github actions)
=======
>>>>>>> e539502 (Another attempt at github actions running unit tests)
=======
>>>>>>> f064beb (Attempt at adding unit testing to Github Actions)
  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: ctype, dom, iconv, json, zip, gd, soap
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress
      - name: Unit tests
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        run: php vendor/bin/phpunit tests
=======
        run: phpdbg -qrr ./bin/phpunit --coverage-clover=coverage/unit.xml
>>>>>>> 2333520 (Added unit tests to github actions)
=======
        run: phpdbg -qrr /vendor/bin/phpunit tests
>>>>>>> 16ceee8 (Attempt at making github actions run unit tests)
=======
>>>>>>> f7507ac (Removed attempt at github actions running unit tests)
=======
        run: php vendor/bin/phpunit tests
>>>>>>> e539502 (Another attempt at github actions running unit tests)
=======
>>>>>>> 12fcf87 (Removed unit-tests for github actions to make this branch only adding tests)
=======
        run: php vendor/bin/phpunit tests
>>>>>>> f064beb (Attempt at adding unit testing to Github Actions)
=======
        run: php vendor/bin/phpunit tests
=======
        run: php vendor/bin/phpunit tests --coverage-clover=coverage/unit.xml
>>>>>>> 9464670 (Add coverage of unit test to github actions)

  markdownlint:
    name: markdownlint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn packages
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Yarn install
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - run: yarn install
      - name: markdownlint
        run: yarn markdownlint README.md
>>>>>>> 3e4311e (Attempt at adding markdownlint to github actions)
